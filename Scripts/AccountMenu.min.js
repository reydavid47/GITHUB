(function (e) { var a, i, f, h, j, b, d, c = { init: function (l) { a = this; if (l) { if (l.AccountMenuElement) { i = e(l.AccountMenuElement) } if (l.CloseSelector) { f = l.CloseSelector } if (l.EditSelector) { h = l.EditSelector } if (l.SaveSelector) { j = l.SaveSelector } if (l.CancelSelector) { b = l.CancelSelector } if (l.HeaderSelector) { d = l.HeaderSelector } k(); g() } else { e.error("jQuery.AccountMenu did not receive any setting to initialize with") } } }, k = function () { if (!a.attr("at_child")) { if (i) { at_attach(a.attr("id"), i.attr("id"), "click", "y", "pointer") } } }, g = function () { if (i) { i.find("a").each(function (l, n) { var m = e("div#" + e(n).attr("ref")); if (!e(n).data("events")) { e(n).click(function () { cancelOverlay(); e("<div />").addClass("whitescreen").appendTo("body").show().click(function () { cancelOverlay() }); i.css("visibility", "hidden"); m.center().show() }) } if (!m.find(f).data("events")) { m.find(f).click(function () { cancelOverlay() }) } if (!m.find(h).data("events")) { m.find(h).live("click", function () { e(this).closest("tr").nextUntil(d).css("display", "table-row") }) } if (!m.find(j).data("events")) { m.find(j).click(function () { e(this).closest("tr").prevUntil(d).andSelf().hide(); return true }) } if (!m.find(b).data("events")) { m.find(b).click(function () { e(this).closest("tr").prevUntil(d).andSelf().hide() }) } }) } }; e.fn.AccountMenu = function (l) { if (c[l]) { return c[l].apply(this, Array.prototype.slice.call(arguments, 1)) } else { if (typeof l === "object" || !l) { return c.init.apply(this, arguments) } else { e.error("Method " + l + " does not exist on jQuery.AccountMenu") } } } })(jQuery);